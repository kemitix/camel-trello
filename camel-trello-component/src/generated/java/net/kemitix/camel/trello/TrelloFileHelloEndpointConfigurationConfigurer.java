/* Generated by camel build tools - do NOT edit this file! */
package net.kemitix.camel.trello;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import net.kemitix.camel.trello.TrelloFileHelloEndpointConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class TrelloFileHelloEndpointConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        net.kemitix.camel.trello.TrelloFileHelloEndpointConfiguration target = (net.kemitix.camel.trello.TrelloFileHelloEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "name":
        case "Name": target.setName(property(camelContext, java.lang.String.class, value)); return true;
        case "name1":
        case "Name1": target.setName1(property(camelContext, java.lang.String.class, value)); return true;
        case "name2":
        case "Name2": target.setName2(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        Map<String, Object> answer = new CaseInsensitiveMap();
        answer.put("Name", java.lang.String.class);
        answer.put("Name1", java.lang.String.class);
        answer.put("Name2", java.lang.String.class);
        return answer;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        net.kemitix.camel.trello.TrelloFileHelloEndpointConfiguration target = (net.kemitix.camel.trello.TrelloFileHelloEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "name":
        case "Name": return target.getName();
        case "name1":
        case "Name1": return target.getName1();
        case "name2":
        case "Name2": return target.getName2();
        default: return null;
        }
    }
}

